name: Track and sync tracked files
on:
  push:
    branches:
      - main
      - master

env:
  DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
  GH_TOKEN: ${{ secrets.TEMPLATES_GITHUB_TOKEN }}

jobs:
  sync-diffs-with-template-builder:
    name: "Track updated files"
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'chadwcarlson' && github.event.commits[0].author.name != 'GitHub Action' }}
    steps:
      - name: 'get repo'
        uses: actions/checkout@v3
        with:
          token: ${{secrets.TEMPLATES_GITHUB_TOKEN }}
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v29
        with:
          files: |
            .platform.app.yaml
            .platform/services.yaml
            .platform/applications.yaml
      - name: 'Set up Github token'
        id: setup-gh-token
        shell: bash
        run: echo "GITHUB_TOKEN=$GH_TOKEN" >> $GITHUB_ENV
      - name: Test above
        run: |
          if [ "${{ steps.changed-files.outputs.all_changed_files }}" == "" ];then
              echo "No relevant files modified. All is well."
          else 

              # Get current template name.
              arrIN=(${GITHUB_REPOSITORY//\// })
              TEMPLATE=${arrIN[1]}   
              SYNC_BRANCH=sync-$TEMPLATE

              # Clone template-builder, and create a new branch that matches changes in template repo.
              echo "Cloning template-builder"
              git clone https://github.com/platformsh/template-builder.git
              cd template-builder
              git checkout -b $SYNC_BRANCH

              # Copy and stage the changed files
              echo "Syncing revisions into template-builder"
              for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
                echo "Syncing $file"
                cp ../$file templates/$TEMPLATE/files
                git add templates/$TEMPLATE/files/$file
              done

              # Commit and push to template-builder.
              echo "Commit and push"
              git commit -m "Synching $GITHUB_REPOSITORY ($GITHUB_SHA)"
              git push origin $SYNC_BRANCH

              # Create the corresponding PR.
              # gh pr create \
              #   --head $SYNC_BRANCH \
              #   --title "Sync: matching $GITHUB_REPOSITORY#$PR_NUMBER" \
              #   --body "Syncing updates made in to https://github.com/platformsh-templates/$TEMPLATE/pull/$PR_NUMBER"
          fi 


      # - name: 'get diff and track changes'
      #   run: |

      #     curl -s https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA.diff > latest.diff

      #     TRACKED_FILES=( .platform.app.yaml .platform/services.yaml .platform/applications.yaml )
      #     MODIFIED_FILES=()
      #     OPEN_TB_PR=0

      #     # cat latest.diff

      #     # DETECT CHANGES
      #     for FILE in "${TRACKED_FILES[@]}"
      #     do
      #         if test -f "$FILE"; then
      #             echo "Checking $FILE"
      #             grep 'diff --git a/$FILE b/$FILE' latest.diff
      #             CHANGE=$(grep 'diff --git a/$FILE b/$FILE' latest.diff)
      #             if [ "$CHANGE" == "" ];then
      #                 echo "$FILE is unchanged"
      #             else 
      #                 echo "$FILE has been modified"
      #                 OPEN_TB_PR=1
      #                 MODIFIED_FILES+=($FILE)
      #             fi 
      #         else
      #             echo "File $FILE not found"
      #         fi
      #     done
      #     echo "modified_files=$MODIFIED_FILES" >> $GITHUB_ENV
      #     echo "sync_tb=$OPEN_TB_PR" >> $GITHUB_ENV
      # - name: 'apply changes'
      #   run: | 
      #     # APPLY CHANGES
      #     if [[ "${{ env.sync_tb }}" -eq 1 ]]; then
      #         echo "One of the tracked files has been changed."
      #         echo "${{ env.modified_files }}"
      #     else
      #         echo "No revisisions detected. All is well.";
      #     fi